generator client {
    provider      = "prisma-client-js"
    output        = "../generated/articles"
    binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL_ARTICLES")
}

model AudioItem {
    id       BigInt  @id @default(autoincrement())
    postId   BigInt  @map("post_id")
    voiceId  String? @map("voice_id") @db.VarChar(255)
    audioUrl String? @map("audio_url") @db.VarChar(1024)
    type     String? @map("type") @db.VarChar(50)
    status   String? @map("status") @db.VarChar(50)

    @@map("audio_items")
}

model BylinePublicationUser {
    id            BigInt   @id
    userId        BigInt?  @map("user_id")
    publicationId BigInt   @map("publication_id")
    role          String?  @map("role") @db.VarChar(50)
    public        Boolean? @default(false) @map("public")
    isPrimary     Boolean? @default(false) @map("is_primary")
    bylineId      BigInt   @map("byline_id")

    @@map("byline_publication_users")
}

model Byline {
    id                BigInt    @id
    name              String?   @map("name") @db.VarChar(255)
    handle            String?   @map("handle") @db.VarChar(255)
    previousName      String?   @map("previous_name") @db.VarChar(255)
    photoUrl          String?   @map("photo_url") @db.VarChar(1024)
    bio               String?   @map("bio")
    profileSetUpAt    DateTime? @map("profile_set_up_at") @db.Timestamp(6)
    twitterScreenName String?   @map("twitter_screen_name") @db.VarChar(255)
    isGuest           Boolean?  @default(false) @map("is_guest")
    bestsellerTier    String?   @map("bestseller_tier") @db.VarChar(255)

    @@map("bylines")
}

model KnexMigration {
    id            Int       @id @default(autoincrement())
    name          String?   @map("name") @db.VarChar(255)
    batch         Int?      @map("batch")
    migrationTime DateTime? @map("migration_time") @db.Timestamptz(6)

    @@map("knex_migrations")
}

model PodcastField {
    id                         BigInt   @id @default(autoincrement())
    postId                     BigInt   @map("post_id")
    podcastEpisodeNumber       Int?     @map("podcast_episode_number")
    podcastSeasonNumber        Int?     @map("podcast_season_number")
    podcastEpisodeType         String?  @map("podcast_episode_type") @db.VarChar(50)
    shouldSyndicateToOtherFeed Boolean? @default(false) @map("should_syndicate_to_other_feed")
    syndicateToSectionId       Int?     @map("syndicate_to_section_id")
    hideFromFeed               Boolean? @default(false) @map("hide_from_feed")
    freePodcastUrl             String?  @map("free_podcast_url") @db.VarChar(1024)
    freePodcastDuration        Int?     @map("free_podcast_duration")

    @@map("podcast_fields")
}

model PostByline {
    id       BigInt @id @default(autoincrement())
    postId   BigInt @map("post_id")
    bylineId BigInt @map("byline_id")

    @@map("post_bylines")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Post {
    id                      String    @id @db.VarChar
    publicationId           String?   @map("publication_id") @db.VarChar
    title                   String?   @map("title") @db.VarChar(255)
    socialTitle             String?   @map("social_title") @db.VarChar(255)
    searchEngineTitle       String?   @map("search_engine_title") @db.VarChar(255)
    searchEngineDescription String?   @map("search_engine_description") @db.VarChar(500)
    slug                    String?   @map("slug") @db.VarChar(255)
    postDate                DateTime? @map("post_date") @db.Timestamp(6)
    audience                String?   @map("audience") @db.VarChar(50)
    canonicalUrl            String?   @map("canonical_url") @db.VarChar(1024)
    reactions               Json?     @map("reactions")
    subtitle                String?   @map("subtitle") @db.VarChar(500)
    coverImage              String?   @map("cover_image") @db.VarChar(1024)
    coverImageIsSquare      Boolean?  @default(false) @map("cover_image_is_square")
    coverImageIsExplicit    Boolean?  @default(false) @map("cover_image_is_explicit")
    description             String?   @map("description")
    bodyJson                Json?     @map("body_json")
    bodyText                String?   @map("body_text")
    truncatedBodyText       String?   @map("truncated_body_text")
    wordcount               Int?      @map("wordcount")
    postTags                Json?     @map("postTags")
    reaction                Json?     @map("reaction")
    reactionCount           Int?      @default(0) @map("reaction_count")
    commentCount            Int?      @default(0) @map("comment_count")
    childCommentCount       Int?      @default(0) @map("child_comment_count")
    hidden                  String?   @map("hidden") @db.VarChar
    explicit                Boolean?  @default(false) @map("explicit")
    emailFromName           String?   @map("email_from_name") @db.VarChar(255)
    isGuest                 Boolean   @default(false) @map("is_guest")
    bestsellerTier          String?   @map("bestseller_tier") @db.VarChar(255)
    podcastEpisodeImageInfo Json?     @map("podcast_episode_image_info") @db.Json

    @@index([audience], map: "idx_posts_audience")
    @@index([publicationId], map: "idx_posts_publication_id")
    @@index([reactionCount(sort: Desc)], map: "idx_posts_reaction_count_btree")
    @@index([title, postDate(sort: Desc)], map: "idx_posts_title_postdate")
    @@map("posts")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Publication {
    id                    BigInt    @id(map: "publications_pk")
    name                  String?   @map("name") @db.VarChar(255)
    subdomain             String?   @map("subdomain") @db.VarChar(255)
    customDomain          String?   @map("custom_domain") @db.VarChar(255)
    customDomainOptional  Boolean?  @default(false) @map("custom_domain_optional")
    heroText              String?   @map("hero_text")
    logoUrl               String?   @map("logo_url") @db.VarChar(1024)
    authorId              BigInt?   @map("author_id")
    themeVarBackgroundPop String?   @map("theme_var_background_pop") @db.VarChar(255)
    createdAt             DateTime? @map("created_at") @db.Timestamp(6)
    rssWebsiteUrl         String?   @map("rss_website_url") @db.VarChar(1024)
    emailFromName         String?   @map("email_from_name") @db.VarChar(255)
    copyright             String?   @map("copyright") @db.VarChar(255)
    foundingPlanName      String?   @map("founding_plan_name") @db.VarChar(255)
    communityEnabled      Boolean?  @default(false) @map("community_enabled")
    inviteOnly            Boolean?  @default(false) @map("invite_only")
    paymentsState         String?   @default("disabled") @map("payments_state") @db.VarChar(100)
    language              String?   @map("language") @db.VarChar(50)
    explicit              Boolean?  @default(false) @map("explicit")
    isPersonalMode        Boolean?  @default(false) @map("is_personal_mode")

    @@index([subdomain(ops: raw("gin_trgm_ops"))], map: "idx_publications_subdomain_trgm", type: Gin)
    @@map("publications")
}

model knex_migrations_lock {
    index     Int  @id @default(autoincrement())
    is_locked Int?
}

model post_body {
    id         String    @id @default(dbgenerated("gen_random_uuid()"))
    post_id    String    @db.VarChar
    body       String
    created_at DateTime? @default(now()) @db.Timestamptz(6)
    updated_at DateTime? @default(now()) @db.Timestamptz(6)
}

model PublicationLink {
    id          Int       @id @default(autoincrement())
    url         String    @map("url")
    startedAt   DateTime? @map("started_at")
    completedAt DateTime? @map("completed_at")
    status      String?   @map("status")

    @@map("publication_links")
}